tile: controller controller

Milestone: controllable demo

tile: expand kbm controller
core: fullscreen
core: system multithreading - dependency semaphores
core: messages, as a performance optimisation of polling
core: polling
core: change entity ownership logic (why are they shared)
core: double viewport (balls unification)
core: get rid of sdl? or is it too useful (for input). if so at least abstract its events
core: model loader/better resource loader in general
linux: port to linux
win: if possible, static link to msvcrt
core: expiring entities
core: state - controllable game clock
core: wrangle gl extensions (glew/etc), and use this to get rid of more SDL dependencies
wizards game
tile: other blitters? directx? software?
win/mesh: directx renderer
mesh: textures, brush/mesh distinction SOMEHOW
mesh: lighting
mesh: restore collision
mesh: flat/sprite meshes
mesh: obb collision detection
mesh: make aabb detection spatial (octree)
mesh: mesh collision detection?
mesh: better bounce physics - forces? or just go straight to Bullet
mesh: gl3/VBO renderer
mesh: make collision detection pairwise
mesh: skybox 
mesh: 6dof controller
gui: get fonts in
gui: labels 
gui: add/subtract ball (this will involve safely destroying entities)